[
  {
    "id": 1,
    "question": "Which HTML5 element should be used to wrap the main navigation links of a website?",
    "topic": "Web Fundamentals",
    "choices": [
      "<nav>",
      "<div>",
      "<header>",
      "<menu>"
    ],
    "correctIndex": 0,
    "explanation": "The <nav> element is specifically designed for navigation links. It provides semantic meaning that helps screen readers and search engines understand the purpose of the content. Using <div> provides no semantic value, while <header> is for page headers and <menu> is for interactive commands."
  },
  {
    "id": 2,
    "question": "What is the correct CSS to center a div horizontally and vertically using Flexbox?",
    "topic": "Web Fundamentals",
    "choices": [
      "display: flex; justify-content: center; align-items: center;",
      "display: flex; align-content: center; justify-items: center;",
      "display: block; text-align: center; vertical-align: middle;",
      "display: grid; place-items: center;"
    ],
    "correctIndex": 0,
    "explanation": "With Flexbox, 'justify-content: center' centers items horizontally (main axis) and 'align-items: center' centers them vertically (cross axis). Option D would work with CSS Grid, but the question specifically asks about Flexbox."
  },
  {
    "id": 3,
    "question": "Which JavaScript method is used to select an element by its ID?",
    "topic": "Web Fundamentals",
    "choices": [
      "document.getElementById('myId')",
      "document.querySelector('#myId')",
      "document.getElementByClass('myId')",
      "Both A and B are correct"
    ],
    "correctIndex": 3,
    "explanation": "Both document.getElementById('myId') and document.querySelector('#myId') can select an element by ID. getElementById is the traditional method, while querySelector is more flexible and can use any CSS selector. Option C is incorrect because it should be getElementsByClassName and it's for classes, not IDs."
  },
  {
    "id": 4,
    "question": "What does this CSS media query do?\n\n@media (max-width: 768px) { /* styles */ }",
    "topic": "Web Fundamentals",
    "choices": [
      "Applies styles when screen width is 768px or less",
      "Applies styles when screen width is exactly 768px",
      "Applies styles when screen width is more than 768px",
      "Only applies to tablets with 768px width"
    ],
    "correctIndex": 0,
    "explanation": "The 'max-width: 768px' media query applies styles when the viewport width is 768 pixels or smaller. This is commonly used for mobile-first responsive design to apply mobile styles on smaller screens."
  },
  {
    "id": 5,
    "question": "Which input type provides built-in email validation in HTML5?",
    "topic": "Web Fundamentals",
    "choices": [
      "<input type=\"email\">",
      "<input type=\"text\" pattern=\"email\">",
      "<input type=\"validation\" format=\"email\">",
      "<input type=\"text\" validate=\"email\">"
    ],
    "correctIndex": 0,
    "explanation": "HTML5 introduced the 'email' input type which automatically validates that the entered text follows email format (contains @ symbol and valid structure). Modern browsers will show validation errors if the format is incorrect."
  },
  {
    "id": 6,
    "question": "What is the purpose of the CSS 'box-sizing: border-box' property?",
    "topic": "Web Fundamentals",
    "choices": [
      "Includes padding and border in the element's total width and height",
      "Creates a border around the element",
      "Adds padding to the element",
      "Changes the element's display type to a box"
    ],
    "correctIndex": 0,
    "explanation": "When 'box-sizing: border-box' is applied, the element's width and height include the padding and border, making it easier to size elements. Without this property, padding and borders are added to the specified width and height, often causing layout issues."
  },
  {
    "id": 7,
    "question": "Which CSS display value removes an element from the document flow?",
    "topic": "Web Fundamentals",
    "choices": [
      "display: none",
      "display: block",
      "display: inline",
      "display: flex"
    ],
    "correctIndex": 0,
    "explanation": "'display: none' completely removes an element from the document flow, making it invisible and not taking up any space. Other display values like 'block', 'inline', and 'flex' still participate in the document flow, just with different layout behaviors."
  },
  {
    "id": 8,
    "question": "What is the correct way to add an event listener in JavaScript?",
    "topic": "Web Fundamentals",
    "choices": [
      "element.addEventListener('click', function() { })",
      "element.onclick = function() { }",
      "element.attachEvent('onclick', function() { })",
      "Both A and B are correct"
    ],
    "correctIndex": 3,
    "explanation": "Both addEventListener and direct event properties (like onclick) can be used to add event listeners. addEventListener is more flexible as it allows multiple listeners for the same event and provides better control. Direct event properties are simpler but limited to one listener per event type."
  },
  {
    "id": 9,
    "question": "Which CSS property is used to make a flex container's items wrap to multiple lines?",
    "topic": "Web Fundamentals",
    "choices": [
      "flex-wrap: wrap",
      "flex-direction: wrap",
      "flex-line: wrap",
      "wrap: flex"
    ],
    "correctIndex": 0,
    "explanation": "The 'flex-wrap: wrap' property allows flex items to wrap onto multiple lines when they don't fit in a single line. The default value is 'nowrap', which keeps all items on one line even if they overflow the container."
  },
  {
    "id": 10,
    "question": "What is the purpose of the viewport meta tag in HTML?",
    "topic": "Web Fundamentals",
    "choices": [
      "Controls how the page is displayed on mobile devices",
      "Sets the background color of the page",
      "Defines the character encoding",
      "Specifies the page title"
    ],
    "correctIndex": 0,
    "explanation": "The viewport meta tag (<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">) controls how the page is displayed on mobile devices. It ensures the page width matches the device width and sets the initial zoom level, which is essential for responsive design."
  },
  {
    "id": 11,
    "question": "Which CSS property is used to change the font size of an element?",
    "topic": "Web Fundamentals",
    "choices": [
      "font-size",
      "text-size",
      "font-style",
      "text-style"
    ],
    "correctIndex": 0,
    "explanation": "The 'font-size' property is used to change the font size of an element. It can be specified in various units such as pixels (px), ems (em), rems (rem), percentages (%), or keywords like small, medium, large."
  },
  {
    "id": 12,
    "question": "What is the correct way to declare a JavaScript variable?",
    "topic": "Web Fundamentals",
    "choices": [
      "let myVariable = 'value';",
      "variable myVariable = 'value';",
      "declare myVariable = 'value';",
      "var myVariable: 'value';"
    ],
    "correctIndex": 0,
    "explanation": "In modern JavaScript, variables are declared using 'let' for block-scoped variables or 'const' for constants. 'var' is the older way of declaring variables with function scope. The syntax 'let myVariable = 'value';' is the correct modern approach."
  },
  {
    "id": 13,
    "question": "Which HTML element is used to define an independent, self-contained content section?",
    "topic": "Web Fundamentals",
    "choices": [
      "<article>",
      "<section>",
      "<div>",
      "<span>"
    ],
    "correctIndex": 0,
    "explanation": "The <article> element is used to define independent, self-contained content that could stand alone, such as a blog post, news article, or forum post. <section> groups related content, <div> is a generic container, and <span> is an inline container."
  },
  {
    "id": 14,
    "question": "What is the purpose of the CSS 'z-index' property?",
    "topic": "Web Fundamentals",
    "choices": [
      "Controls the stack order of positioned elements",
      "Sets the zoom level of an element",
      "Defines the number of columns in a grid",
      "Specifies the indentation of text"
    ],
    "correctIndex": 0,
    "explanation": "The 'z-index' property controls the stack order of positioned elements (those with position other than static). Elements with a higher z-index value will appear in front of elements with a lower z-index value."
  },
  {
    "id": 15,
    "question": "Which JavaScript method is used to add a new element to the end of an array?",
    "topic": "Web Fundamentals",
    "choices": [
      "push()",
      "append()",
      "add()",
      "insert()"
    ],
    "correctIndex": 0,
    "explanation": "The 'push()' method adds one or more elements to the end of an array and returns the new length of the array. 'append()' is used for DOM manipulation, while 'add()' and 'insert()' are not standard array methods."
  },
  {
    "id": 16,
    "question": "What does the CSS 'position: absolute;' property do?",
    "topic": "Web Fundamentals",
    "choices": [
      "Positions the element relative to its nearest positioned ancestor",
      "Positions the element relative to the viewport",
      "Keeps the element in the normal document flow",
      "Centers the element horizontally and vertically"
    ],
    "correctIndex": 0,
    "explanation": "'position: absolute;' removes the element from the normal document flow and positions it relative to its nearest positioned ancestor (an element with position other than static). If no positioned ancestor exists, it positions relative to the initial containing block (usually the viewport)."
  },
  {
    "id": 17,
    "question": "Which HTML attribute is used to specify alternative text for an image?",
    "topic": "Web Fundamentals",
    "choices": [
      "alt",
      "title",
      "description",
      "caption"
    ],
    "correctIndex": 0,
    "explanation": "The 'alt' attribute specifies alternative text for an image, which is displayed if the image cannot be loaded and is also used by screen readers for accessibility. The 'title' attribute provides tooltip text, while 'description' and 'caption' are not valid image attributes."
  },
  {
    "id": 18,
    "question": "What is the correct syntax for a CSS class selector?",
    "topic": "Web Fundamentals",
    "choices": [
      ".className",
      "#className",
      "*className",
      "$className"
    ],
    "correctIndex": 0,
    "explanation": "In CSS, class selectors are prefixed with a period (.), so '.className' is the correct syntax. ID selectors use the hash symbol (#), while * and $ are not used for class selection."
  },
  {
    "id": 19,
    "question": "Which JavaScript operator is used to check both value and type equality?",
    "topic": "Web Fundamentals",
    "choices": [
      "===",
      "==",
      "=",
      "!=="
    ],
    "correctIndex": 0,
    "explanation": "The strict equality operator '===' checks both value and type equality without performing type coercion. The loose equality operator '==' performs type coercion before comparison. The single '=' is for assignment, and '!== ' checks for strict inequality."
  },
  {
    "id": 20,
    "question": "What is the purpose of the HTML <main> element?",
    "topic": "Web Fundamentals",
    "choices": [
      "Represents the dominant content of the body of a document",
      "Defines the main navigation of the page",
      "Contains metadata about the document",
      "Groups related content together"
    ],
    "correctIndex": 0,
    "explanation": "The <main> element represents the dominant content of the body of a document or application. It should contain the primary content that is unique to that page and directly related to the document's central topic."
  },
  {
    "id": 21,
    "question": "Which CSS property is used to set the space between lines of text?",
    "topic": "Web Fundamentals",
    "choices": [
      "line-height",
      "letter-spacing",
      "word-spacing",
      "text-spacing"
    ],
    "correctIndex": 0,
    "explanation": "The 'line-height' property sets the space between lines of text. 'letter-spacing' controls the space between characters, 'word-spacing' controls the space between words, and 'text-spacing' is not a standard CSS property."
  },
  {
    "id": 22,
    "question": "What is the correct way to write a comment in JavaScript?",
    "topic": "Web Fundamentals",
    "choices": [
      "// This is a comment",
      "<!-- This is a comment -->",
      "/* This is a comment */",
      "Both A and C are correct"
    ],
    "correctIndex": 3,
    "explanation": "JavaScript supports both single-line comments using '//' and multi-line comments using '/* */'. HTML comments use <!-- -->, which is not valid JavaScript syntax."
  },
  {
    "id": 23,
    "question": "Which CSS property is used to make text bold?",
    "topic": "Web Fundamentals",
    "choices": [
      "font-weight",
      "font-style",
      "text-weight",
      "bold"
    ],
    "correctIndex": 0,
    "explanation": "The 'font-weight' property is used to make text bold. It accepts values like 'bold', 'bolder', 'lighter', or numeric values from 100 to 900. 'font-style' is used for italic text, and 'text-weight' and 'bold' are not valid CSS properties."
  },
  {
    "id": 24,
    "question": "What is the purpose of the HTML <aside> element?",
    "topic": "Web Fundamentals",
    "choices": [
      "Represents content that is tangentially related to the content around it",
      "Defines the main content of the page",
      "Contains navigation links",
      "Groups related elements together"
    ],
    "correctIndex": 0,
    "explanation": "The <aside> element represents content that is tangentially related to the content around it, such as sidebars, pull quotes, or advertisements. It should contain content that is related to the surrounding content but not essential to the main flow."
  },
  {
    "id": 25,
    "question": "Which JavaScript method is used to remove the last element from an array?",
    "topic": "Web Fundamentals",
    "choices": [
      "pop()",
      "shift()",
      "remove()",
      "delete()"
    ],
    "correctIndex": 0,
    "explanation": "The 'pop()' method removes the last element from an array and returns that element. 'shift()' removes the first element, 'remove()' is not a standard array method, and 'delete' is an operator that removes object properties."
  },
  {
    "id": 26,
    "question": "What does the CSS 'float' property do?",
    "topic": "Web Fundamentals",
    "choices": [
      "Positions an element to the left or right, allowing other content to wrap around it",
      "Moves an element up or down on the page",
      "Rotates an element",
      "Changes the display order of elements"
    ],
    "correctIndex": 0,
    "explanation": "The 'float' property positions an element to the left or right side of its container, allowing other content (like text) to wrap around it. It's commonly used for creating layouts with text wrapping around images."
  },
  {
    "id": 27,
    "question": "Which HTML element is used to define a footer for a document or section?",
    "topic": "Web Fundamentals",
    "choices": [
      "<footer>",
      "<bottom>",
      "<foot>",
      "<end>"
    ],
    "correctIndex": 0,
    "explanation": "The <footer> element is used to define a footer for a document or section. It typically contains information about the author, copyright data, or links to related documents. <bottom>, <foot>, and <end> are not valid HTML elements."
  },
  {
    "id": 28,
    "question": "What is the correct syntax for a CSS ID selector?",
    "topic": "Web Fundamentals",
    "choices": [
      "#idName",
      ".idName",
      "*idName",
      "@idName"
    ],
    "correctIndex": 0,
    "explanation": "In CSS, ID selectors are prefixed with a hash symbol (#), so '#idName' is the correct syntax. Class selectors use the period (.), while * and @ are not used for ID selection."
  },
  {
    "id": 29,
    "question": "Which JavaScript method is used to convert a string to an integer?",
    "topic": "Web Fundamentals",
    "choices": [
      "parseInt()",
      "toInt()",
      "convertInt()",
      "stringToInt()"
    ],
    "correctIndex": 0,
    "explanation": "The 'parseInt()' function is used to convert a string to an integer. It parses the string and returns an integer or NaN if the string cannot be converted. 'toInt()' and the other options are not standard JavaScript methods."
  },
  {
    "id": 30,
    "question": "What is the purpose of the CSS 'transition' property?",
    "topic": "Web Fundamentals",
    "choices": [
      "To animate changes between CSS property values",
      "To move elements from one position to another",
      "To create a smooth scrolling effect",
      "To change the display order of elements"
    ],
    "correctIndex": 0,
    "explanation": "The 'transition' property is used to animate changes between CSS property values when they change, such as on hover or focus. It creates smooth animations for property changes like color, size, or position."
  },
  {
    "id": 31,
    "question": "Which HTML element is used to define important text?",
    "topic": "Web Fundamentals",
    "choices": [
      "<strong>",
      "<b>",
      "<important>",
      "<em>"
    ],
    "correctIndex": 0,
    "explanation": "The <strong> element is used to define important text with strong importance, seriousness, or urgency. It is semantic and indicates that the content is important. <b> makes text bold but has no semantic meaning, <important> is not a valid HTML element, and <em> is for emphasized text."
  },
  {
    "id": 32,
    "question": "What is the correct way to declare a CSS rule for all <h1> elements?",
    "topic": "Web Fundamentals",
    "choices": [
      "h1 { color: red; }",
      ".h1 { color: red; }",
      "#h1 { color: red; }",
      "*h1 { color: red; }"
    ],
    "correctIndex": 0,
    "explanation": "To target all <h1> elements in CSS, you use the element selector without any prefix: 'h1 { color: red; }'. '.h1' targets elements with class='h1', '#h1' targets an element with id='h1', and '*h1' is not valid CSS syntax."
  },
  {
    "id": 33,
    "question": "Which JavaScript method is used to add a new element to the beginning of an array?",
    "topic": "Web Fundamentals",
    "choices": [
      "unshift()",
      "shift()",
      "prepend()",
      "insertAtStart()"
    ],
    "correctIndex": 0,
    "explanation": "The 'unshift()' method adds one or more elements to the beginning of an array and returns the new length of the array. 'shift()' removes the first element, 'prepend()' is a DOM method, and 'insertAtStart()' is not a standard array method."
  },
  {
    "id": 34,
    "question": "What does the CSS 'display: inline-block;' property do?",
    "topic": "Web Fundamentals",
    "choices": [
      "Makes an element flow like inline elements but allows setting width and height",
      "Makes an element take up the full width of its container",
      "Hides the element from the page",
      "Makes an element float to the left or right"
    ],
    "correctIndex": 0,
    "explanation": "'display: inline-block;' makes an element flow like inline elements (it doesn't break to a new line) but allows setting width and height properties, which regular inline elements don't allow. It combines properties of both inline and block-level elements."
  },
  {
    "id": 35,
    "question": "Which HTML attribute is used to specify that an input field must be filled out before submitting?",
    "topic": "Web Fundamentals",
    "choices": [
      "required",
      "mandatory",
      "validate",
      "necessary"
    ],
    "correctIndex": 0,
    "explanation": "The 'required' attribute is used to specify that an input field must be filled out before submitting the form. It's a boolean attribute that provides built-in HTML5 form validation. The other options are not valid HTML attributes for this purpose."
  },
  {
    "id": 36,
    "question": "What is the purpose of the JavaScript 'typeof' operator?",
    "topic": "Web Fundamentals",
    "choices": [
      "To return the data type of a variable or value",
      "To convert a value to a string",
      "To check if a variable exists",
      "To compare two values"
    ],
    "correctIndex": 0,
    "explanation": "The 'typeof' operator returns a string indicating the data type of the operand. It's useful for checking the type of a variable or value, such as 'number', 'string', 'boolean', 'object', 'function', etc."
  },
  {
    "id": 37,
    "question": "Which CSS property is used to set the background color of an element?",
    "topic": "Web Fundamentals",
    "choices": [
      "background-color",
      "color",
      "background",
      "bgcolor"
    ],
    "correctIndex": 0,
    "explanation": "The 'background-color' property is used to set the background color of an element. 'color' sets the text color, 'background' is a shorthand property that can set multiple background properties, and 'bgcolor' is an HTML attribute, not a CSS property."
  },
  {
    "id": 38,
    "question": "What is the correct HTML element for playing video files?",
    "topic": "Web Fundamentals",
    "choices": [
      "<video>",
      "<movie>",
      "<media>",
      "<play>"
    ],
    "correctIndex": 0,
    "explanation": "The <video> element is used to embed video content in HTML documents. It supports various video formats and provides built-in controls. <movie>, <media>, and <play> are not valid HTML elements for video content."
  },
  {
    "id": 39,
    "question": "Which JavaScript method is used to round a number to the nearest integer?",
    "topic": "Web Fundamentals",
    "choices": [
      "Math.round()",
      "Math.floor()",
      "Math.ceil()",
      "Math.integer()"
    ],
    "correctIndex": 0,
    "explanation": "The 'Math.round()' method rounds a number to the nearest integer. 'Math.floor()' rounds down to the nearest integer, 'Math.ceil()' rounds up to the nearest integer, and 'Math.integer()' is not a valid method."
  },
  {
    "id": 40,
    "question": "What is the purpose of the CSS '@media' rule?",
    "topic": "Web Fundamentals",
    "choices": [
      "To apply different styles for different media types or device characteristics",
      "To import external CSS files",
      "To define custom CSS properties",
      "To create CSS animations"
    ],
    "correctIndex": 0,
    "explanation": "The '@media' rule is used to apply different styles for different media types or device characteristics, such as screen size, resolution, or orientation. It's the foundation of responsive web design, allowing different styles for mobile, tablet, and desktop views."
  }
]