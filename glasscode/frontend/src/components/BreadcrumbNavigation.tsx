'use client';

import React from 'react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';

interface BreadcrumbItem {
  name: string;
  href: string;
  tier?: 'foundational' | 'core' | 'specialized' | 'quality';
}

interface BreadcrumbNavigationProps {
  items?: BreadcrumbItem[];
}

const BreadcrumbNavigation: React.FC<BreadcrumbNavigationProps> = ({ items = [] }) => {
  const pathname = usePathname();
  
  // Auto-generate breadcrumbs based on pathname if not provided
  const autoGeneratedItems = React.useMemo(() => {
    if (items.length > 0) return items;
    
    const pathSegments = pathname.split('/').filter(segment => segment);
    
    // Skip if we're on the homepage
    if (pathSegments.length === 0) return [];
    
    // Add home breadcrumb
    const breadcrumbs: BreadcrumbItem[] = [
      { name: 'Home', href: '/' }
    ];
    
    // Map path segments to readable names and tier colors
    pathSegments.forEach((segment, index) => {
      const href = '/' + pathSegments.slice(0, index + 1).join('/');
      
      // Map segment to readable name
      let name = segment.charAt(0).toUpperCase() + segment.slice(1);
      let tier: BreadcrumbItem['tier'] = undefined;
      
      // Special mappings
      switch (segment) {
        case 'dotnet':
          name = '.NET Fundamentals';
          tier = 'core';
          break;
        case 'react':
          name = 'React Development';
          tier = 'core';
          break;
        case 'database':
          name = 'Database Systems';
          tier = 'core';
          break;
        case 'typescript':
          name = 'TypeScript Development';
          tier = 'core';
          break;
        case 'node':
          name = 'Node.js Development';
          tier = 'core';
          break;
        case 'laravel':
          name = 'Laravel Framework';
          tier = 'core';
          break;
        case 'nextjs':
          name = 'Next.js Framework';
          tier = 'specialized';
          break;
        case 'graphql':
          name = 'GraphQL Development';
          tier = 'specialized';
          break;
        case 'sass':
          name = 'Sass/SCSS Development';
          tier = 'specialized';
          break;
        case 'tailwind':
          name = 'Tailwind CSS';
          tier = 'specialized';
          break;
        case 'vue':
          name = 'Vue.js Framework';
          tier = 'specialized';
          break;
        case 'testing':
          name = 'Software Testing';
          tier = 'quality';
          break;
        case 'e2e-testing':
          name = 'End-to-End Testing';
          tier = 'quality';
          break;
        case 'performance-optimization':
          name = 'Performance Optimization';
          tier = 'quality';
          break;
        case 'security-fundamentals':
          name = 'Security Best Practices';
          tier = 'quality';
          break;
        case 'lessons':
          name = 'Lessons';
          break;
        case 'interview':
          name = 'Quiz';
          break;
      }
      
      breadcrumbs.push({ name, href, tier });
    });
    
    return breadcrumbs;
  }, [pathname, items]);
  
  if (autoGeneratedItems.length <= 1) return null;
  
  return (
    <nav 
      className="breadcrumb-navigation mb-6" 
      aria-label="Breadcrumb"
    >
      <ol className="flex flex-wrap items-center gap-2 text-sm">
        {autoGeneratedItems.map((item, index) => {
          const isLast = index === autoGeneratedItems.length - 1;
          
          return (
            <li 
              key={item.href} 
              className="flex items-center"
            >
              {isLast ? (
                <span className="text-white font-medium">
                  {item.name}
                </span>
              ) : (
                <>
                  <Link 
                    href={item.href}
                    className="text-blue-400 hover:text-blue-300 transition-colors duration-200 hover:underline"
                  >
                    {item.name}
                  </Link>
                  <span className="mx-2 text-gray-400">
                    /
                  </span>
                </>
              )}
            </li>
          );
        })}
      </ol>
    </nav>
  );
};

export default BreadcrumbNavigation;