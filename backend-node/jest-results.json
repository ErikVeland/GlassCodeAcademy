{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":11,"numPassedTests":46,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":12,"numTotalTests":47,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1761563884711,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Module Controller - getQuizzesByModuleSlugController"],"duration":22,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[33m@@ -5,11 +5,13 @@\u001b[39m\n\u001b[2m        \"ASC\",\u001b[22m\n\u001b[2m      ],\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[2m    \"where\": Object {\u001b[22m\n\u001b[2m      \"isPublished\": true,\u001b[22m\n\u001b[32m-     \"lesson_id\": Array [\u001b[39m\n\u001b[31m+     \"lesson_id\": Object {\u001b[39m\n\u001b[31m+       Symbol(in): Array [\u001b[39m\n\u001b[2m          1,\u001b[22m\n\u001b[2m          2,\u001b[22m\n\u001b[2m        ],\u001b[22m\n\u001b[31m+     },\u001b[39m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m,\n\nNumber of calls: \u001b[31m1\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[33m@@ -5,11 +5,13 @@\u001b[39m\n\u001b[2m        \"ASC\",\u001b[22m\n\u001b[2m      ],\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[2m    \"where\": Object {\u001b[22m\n\u001b[2m      \"isPublished\": true,\u001b[22m\n\u001b[32m-     \"lesson_id\": Array [\u001b[39m\n\u001b[31m+     \"lesson_id\": Object {\u001b[39m\n\u001b[31m+       Symbol(in): Array [\u001b[39m\n\u001b[2m          1,\u001b[22m\n\u001b[2m          2,\u001b[22m\n\u001b[2m        ],\u001b[22m\n\u001b[31m+     },\u001b[39m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m,\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (/Users/veland/GlassCodeAcademy/backend-node/tests/moduleController.test.js:73:32)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Module Controller - getQuizzesByModuleSlugController should return quizzes for a valid module slug","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"failed","title":"should return quizzes for a valid module slug"},{"ancestorTitles":["Module Controller - getQuizzesByModuleSlugController"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Module Controller - getQuizzesByModuleSlugController should return 404 when module is not found","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return 404 when module is not found"},{"ancestorTitles":["Module Controller - getQuizzesByModuleSlugController"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Module Controller - getQuizzesByModuleSlugController should return empty array when no lessons are found for module","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return empty array when no lessons are found for module"},{"ancestorTitles":["Module Controller - getQuizzesByModuleSlugController"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Module Controller - getQuizzesByModuleSlugController should handle internal server errors gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle internal server errors gracefully"}],"endTime":1761563884969,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mModule Controller - getQuizzesByModuleSlugController › should return quizzes for a valid module slug\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n\n    \u001b[33m@@ -5,11 +5,13 @@\u001b[39m\n    \u001b[2m        \"ASC\",\u001b[22m\n    \u001b[2m      ],\u001b[22m\n    \u001b[2m    ],\u001b[22m\n    \u001b[2m    \"where\": Object {\u001b[22m\n    \u001b[2m      \"isPublished\": true,\u001b[22m\n    \u001b[32m-     \"lesson_id\": Array [\u001b[39m\n    \u001b[31m+     \"lesson_id\": Object {\u001b[39m\n    \u001b[31m+       Symbol(in): Array [\u001b[39m\n    \u001b[2m          1,\u001b[22m\n    \u001b[2m          2,\u001b[22m\n    \u001b[2m        ],\u001b[22m\n    \u001b[31m+     },\u001b[39m\n    \u001b[2m    },\u001b[22m\n    \u001b[2m  }\u001b[22m,\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 |\u001b[39m       order\u001b[33m:\u001b[39m [[\u001b[32m'order'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'ASC'\u001b[39m]]\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 73 |\u001b[39m     expect(\u001b[33mLessonQuiz\u001b[39m\u001b[33m.\u001b[39mfindAll)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m       where\u001b[33m:\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m         lesson_id\u001b[33m:\u001b[39m [\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m         isPublished\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/moduleController.test.js\u001b[39m\u001b[0m\u001b[2m:73:32)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/moduleController.test.js","startTime":1761563884723,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Module Quiz Endpoint Integration Tests","GET /api/modules/:slug/quiz"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Module Quiz Endpoint Integration Tests GET /api/modules/:slug/quiz should get quizzes for a module using full slug","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get quizzes for a module using full slug"},{"ancestorTitles":["Module Quiz Endpoint Integration Tests","GET /api/modules/:slug/quiz"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Module Quiz Endpoint Integration Tests GET /api/modules/:slug/quiz should get quizzes for a module using short slug","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get quizzes for a module using short slug"},{"ancestorTitles":["Module Quiz Endpoint Integration Tests","GET /api/modules/:slug/quiz"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Module Quiz Endpoint Integration Tests GET /api/modules/:slug/quiz should return empty array for module with no lessons","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return empty array for module with no lessons"},{"ancestorTitles":["Module Quiz Endpoint Integration Tests","GET /api/modules/:slug/quiz"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Module Quiz Endpoint Integration Tests GET /api/modules/:slug/quiz should return 404 for non-existent module","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 404 for non-existent module"}],"endTime":1761563885125,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/moduleQuizIntegration.test.js","startTime":1761563884981,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Quiz API","POST /api/quiz/lessons/:lessonId/submit"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Quiz API POST /api/quiz/lessons/:lessonId/submit should submit quiz answers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should submit quiz answers"},{"ancestorTitles":["Quiz API","POST /api/quiz/lessons/:lessonId/submit"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Quiz API POST /api/quiz/lessons/:lessonId/submit should fail to submit quiz answers without authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to submit quiz answers without authentication"},{"ancestorTitles":["Quiz API","POST /api/quiz/lessons/:lessonId/submit"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Quiz API POST /api/quiz/lessons/:lessonId/submit should fail to submit quiz answers with invalid data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to submit quiz answers with invalid data"},{"ancestorTitles":["Quiz API","GET /api/quiz/summary"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Quiz API GET /api/quiz/summary should get user progress summary","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should get user progress summary"},{"ancestorTitles":["Quiz API","GET /api/quiz/summary"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Quiz API GET /api/quiz/summary should fail to get progress summary without authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to get progress summary without authentication"}],"endTime":1761563885261,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/quiz.test.js","startTime":1761563885129,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Content Management API","POST /api/content/courses"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API POST /api/content/courses should create a new course","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a new course"},{"ancestorTitles":["Content Management API","GET /api/content/courses"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API GET /api/content/courses should get all courses","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should get all courses"},{"ancestorTitles":["Content Management API","GET /api/content/courses/:id"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API GET /api/content/courses/:id should get a course by ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should get a course by ID"},{"ancestorTitles":["Content Management API","PUT /api/content/courses/:id"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API PUT /api/content/courses/:id should update a course","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update a course"},{"ancestorTitles":["Content Management API","DELETE /api/content/courses/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API DELETE /api/content/courses/:id should delete a course","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should delete a course"},{"ancestorTitles":["Content Management API","POST /api/content/courses/:courseId/modules"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API POST /api/content/courses/:courseId/modules should create a new module","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a new module"},{"ancestorTitles":["Content Management API","GET /api/content/courses/:courseId/modules"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API GET /api/content/courses/:courseId/modules should get modules by course ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should get modules by course ID"},{"ancestorTitles":["Content Management API","POST /api/content/modules/:moduleId/lessons"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API POST /api/content/modules/:moduleId/lessons should create a new lesson","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a new lesson"},{"ancestorTitles":["Content Management API","POST /api/content/lessons/:lessonId/quizzes"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Management API POST /api/content/lessons/:lessonId/quizzes should create a new quiz","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a new quiz"}],"endTime":1761563885355,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/contentManagement.test.js","startTime":1761563885263,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Admin API","GET /api/admin/users"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Admin API GET /api/admin/users should get all users (admin only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should get all users (admin only)"},{"ancestorTitles":["Admin API","GET /api/admin/users"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin API GET /api/admin/users should fail to get users without authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to get users without authentication"},{"ancestorTitles":["Admin API","GET /api/admin/users/:id"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin API GET /api/admin/users/:id should get user by ID (admin only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should get user by ID (admin only)"},{"ancestorTitles":["Admin API","POST /api/admin/users/roles"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Admin API POST /api/admin/users/roles should assign role to user (admin only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should assign role to user (admin only)"},{"ancestorTitles":["Admin API","DELETE /api/admin/users/roles"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Admin API DELETE /api/admin/users/roles should remove role from user (admin only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove role from user (admin only)"},{"ancestorTitles":["Admin API","GET /api/admin/roles"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Admin API GET /api/admin/roles should get all roles (admin only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should get all roles (admin only)"}],"endTime":1761563885441,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/admin.test.js","startTime":1761563885356,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Authentication API","POST /api/auth/register"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Authentication API POST /api/auth/register should register a new user","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should register a new user"},{"ancestorTitles":["Authentication API","POST /api/auth/register"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Authentication API POST /api/auth/register should fail to register with invalid data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to register with invalid data"},{"ancestorTitles":["Authentication API","POST /api/auth/login"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Authentication API POST /api/auth/login should login an existing user","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should login an existing user"},{"ancestorTitles":["Authentication API","POST /api/auth/login"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Authentication API POST /api/auth/login should fail to login with invalid credentials","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to login with invalid credentials"},{"ancestorTitles":["Authentication API","POST /api/auth/password/request-reset"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Authentication API POST /api/auth/password/request-reset should request password reset","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should request password reset"},{"ancestorTitles":["Authentication API","POST /api/auth/password/reset"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Authentication API POST /api/auth/password/reset should reset password with valid token","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reset password with valid token"}],"endTime":1761563885542,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/auth.test.js","startTime":1761563885442,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Profile API","GET /api/profile/profile"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Profile API GET /api/profile/profile should get user profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should get user profile"},{"ancestorTitles":["Profile API","GET /api/profile/profile"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Profile API GET /api/profile/profile should fail to get profile without authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to get profile without authentication"},{"ancestorTitles":["Profile API","PUT /api/profile/profile"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Profile API PUT /api/profile/profile should update user profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update user profile"},{"ancestorTitles":["Profile API","PUT /api/profile/profile"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Profile API PUT /api/profile/profile should fail to update profile without authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fail to update profile without authentication"}],"endTime":1761563885637,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/profile.test.js","startTime":1761563885546,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Course API","GET /api/courses"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Course API GET /api/courses should get all courses","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get all courses"},{"ancestorTitles":["Course API","GET /api/courses"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Course API GET /api/courses should get courses with pagination","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get courses with pagination"},{"ancestorTitles":["Course API","GET /api/courses/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Course API GET /api/courses/:id should return 404 for non-existent course","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 404 for non-existent course"}],"endTime":1761563885719,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/course.test.js","startTime":1761563885638,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["API Structure"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"API Structure should have health check endpoint","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have health check endpoint"},{"ancestorTitles":["API Structure"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"API Structure should return 404 for unknown routes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 404 for unknown routes"}],"endTime":1761563885797,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/api-structure.test.js","startTime":1761563885720,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Health endpoint"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Health endpoint returns 200 and success:true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 200 and success:true"},{"ancestorTitles":["Health endpoint"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Health endpoint returns 404 for unknown route","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 404 for unknown route"}],"endTime":1761563885874,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/health.test.js","startTime":1761563885798,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Database configuration in test environment"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Database configuration in test environment selects correct dialect in test mode based on integration flag","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"selects correct dialect in test mode based on integration flag"}],"endTime":1761563885907,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/config.test.js","startTime":1761563885875,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Performance Tests"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Performance Tests slug resolution performance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"slug resolution performance"}],"endTime":1761563885926,"message":"","name":"/Users/veland/GlassCodeAcademy/backend-node/tests/performance.test.js","startTime":1761563885910,"status":"passed","summary":""}],"wasInterrupted":false}
