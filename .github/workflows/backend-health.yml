name: Backend Health Check

on:
  workflow_call:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  health:
    runs-on: ubuntu-latest
    env:
      GLASSCODE_CONTENT_PATH: ${{ github.workspace }}/content
      CI: true
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend-node
          npm ci

      - name: Set up database
        run: |
          cd backend-node
          npm run seed:content

      - name: Start backend server
        run: |
          cd backend-node
          nohup npm run dev > server.log 2>&1 &

      - name: Wait for health endpoint
        shell: bash
        run: |
          for i in {1..30}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/health || true)
            if [ "$status" = "200" ]; then
              echo "Health endpoint is up"
              break
            fi
            echo "Waiting for backend... (attempt $i)"
            sleep 2
          done
          if [ "$status" != "200" ]; then
            echo "Backend health endpoint did not start in time" >&2
            echo "===== server.log ====="
            tail -n 200 server.log || true
            exit 1
          fi

      - name: Validate health endpoint
        run: |
          curl -s http://127.0.0.1:8080/health > health.json
          echo "Health response:" && cat health.json
          success=$(jq -r '.success' health.json)
          if [ "$success" != "true" ]; then
            echo "Health check failed" >&2
            exit 1
          fi
          echo "Health check passed. âœ…"