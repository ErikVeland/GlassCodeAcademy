name: Backend Health Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  health:
    runs-on: ubuntu-latest
    env:
      GLASSCODE_CONTENT_PATH: ${{ github.workspace }}/content
      ASPNETCORE_URLS: http://127.0.0.1:8080
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore backend
        run: dotnet restore glasscode/backend/backend.csproj

      - name: Build backend
        run: dotnet build glasscode/backend/backend.csproj --configuration Release --no-restore

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Start backend server
        run: nohup dotnet run --project glasscode/backend/backend.csproj --configuration Release > server.log 2>&1 &

      - name: Wait for health endpoint
        shell: bash
        run: |
          for i in {1..30}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/api/health?unlock=1 || true)
            if [ "$status" = "200" ]; then
              echo "Health endpoint is up"
              break
            fi
            echo "Waiting for backend... (attempt $i)"
            sleep 2
          done
          if [ "$status" != "200" ]; then
            echo "Backend health endpoint did not start in time" >&2
            echo "===== server.log ====="
            tail -n 200 server.log || true
            exit 1
          fi

      - name: Validate dataStats are non-zero
        run: |
          curl -s http://127.0.0.1:8080/api/health?unlock=1 > health.json
          echo "Health response:" && cat health.json
          zeroCount=$(jq -r '.dataStats | to_entries | map(select(.value == 0)) | length' health.json)
          if [ "$zeroCount" -gt 0 ]; then
            echo "One or more categories have zero count:" >&2
            jq -r '.dataStats | to_entries | map(select(.value == 0))' health.json >&2
            exit 1
          fi
          echo "All categories are non-zero. âœ…"