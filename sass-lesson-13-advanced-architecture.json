{
  "id": "sass-advanced-lesson-13",
  "moduleSlug": "sass-advanced",
  "title": "Advanced Architecture Patterns and the 7-1 Pattern",
  "order": 13,
  "objectives": [
    "Master the 7-1 architecture pattern for scalable Sass projects",
    "Implement modular design with clear separation of concerns",
    "Utilize design tokens and theming systems for consistent UI",
    "Create maintainable and extensible Sass architectures"
  ],
  "intro": "Advanced architecture patterns are essential for building scalable, maintainable Sass projects that can grow with your application's complexity. This comprehensive lesson explores the industry-standard 7-1 pattern and other advanced architectural approaches that enable teams to collaborate effectively while maintaining code quality and consistency.\n\nYou'll learn to implement the 7-1 pattern, which organizes Sass code into seven distinct folders (abstracts, base, components, layout, pages, themes, vendors) and one main file, providing a clear structure that scales from small projects to large enterprise applications. We'll explore how to properly separate concerns and create modular designs that promote reusability and maintainability.\n\nDesign tokens and theming systems are crucial for maintaining consistent UI across large applications and enabling white-label solutions. We'll cover advanced techniques for implementing design token systems that work seamlessly with Sass variables, maps, and functions to create flexible, themeable designs.\n\nBy mastering advanced architecture patterns, you'll be able to create Sass codebases that are easy to navigate, maintain, and extend, enabling your team to work more efficiently and deliver higher-quality user interfaces. This knowledge is essential for senior frontend developers and CSS architects working on complex applications.",
  "code": {
    "example": "// Advanced 7-1 Architecture Pattern Implementation\n\n/*\nProject structure following the 7-1 pattern:\n\nsass/\n├── abstracts/\n│   ├── _variables.scss\n│   ├── _functions.scss\n│   ├── _mixins.scss\n│   ├── _placeholders.scss\n│   └── _design-tokens.scss\n├── base/\n│   ├── _reset.scss\n│   ├── _typography.scss\n│   ├── _colors.scss\n│   └── _animations.scss\n├── components/\n│   ├── _buttons.scss\n│   ├── _forms.scss\n│   ├── _cards.scss\n│   └── _modals.scss\n├── layout/\n│   ├── _grid.scss\n│   ├── _header.scss\n│   ├── _footer.scss\n│   ├── _sidebar.scss\n│   └── _navigation.scss\n├── pages/\n│   ├── _home.scss\n│   ├── _about.scss\n│   └── _contact.scss\n├── themes/\n│   ├── _default.scss\n│   ├── _dark.scss\n│   └── _brand.scss\n├── vendors/\n│   ├── _normalize.scss\n│   └── _bootstrap-overrides.scss\n└── main.scss\n*/\n\n// Design Tokens Implementation\n// abstracts/_design-tokens.scss\n\n// Color tokens\n$color-tokens: (\n  // Primary colors\n  'primary': (\n    'base': #007bff,\n    'light': #3395ff,\n    'dark': #0062cc,\n    'contrast': #ffffff\n  ),\n  // Secondary colors\n  'secondary': (\n    'base': #6c757d,\n    'light': #868e96,\n    'dark': #545b62,\n    'contrast': #ffffff\n  ),\n  // Status colors\n  'success': (\n    'base': #28a745,\n    'light': #3fc45f,\n    'dark': #1e7e34,\n    'contrast': #ffffff\n  ),\n  'warning': (\n    'base': #ffc107,\n    'light': #ffd042,\n    'dark': #e0a800,\n    'contrast': #212529\n  ),\n  'danger': (\n    'base': #dc3545,\n    'light': #e45b68,\n    'dark': #bd2130,\n    'contrast': #ffffff\n  )\n);\n\n// Spacing tokens\n$spacing-tokens: (\n  'xxs': 0.25rem,  // 4px\n  'xs': 0.5rem,    // 8px\n  'sm': 0.75rem,   // 12px\n  'md': 1rem,      // 16px\n  'lg': 1.5rem,    // 24px\n  'xl': 2rem,      // 32px\n  'xxl': 3rem      // 48px\n);\n\n// Typography tokens\n$typography-tokens: (\n  'font-family': (\n    'base': ('Inter', 'Roboto', 'Helvetica Neue', sans-serif),\n    'monospace': ('SFMono-Regular', 'Consolas', 'Liberation Mono', monospace)\n  ),\n  'font-size': (\n    'xs': 0.75rem,   // 12px\n    'sm': 0.875rem,  // 14px\n    'base': 1rem,    // 16px\n    'lg': 1.125rem,  // 18px\n    'xl': 1.25rem,   // 20px\n    '2xl': 1.5rem,   // 24px\n    '3xl': 1.875rem, // 30px\n    '4xl': 2.25rem   // 36px\n  ),\n  'font-weight': (\n    'light': 300,\n    'normal': 400,\n    'medium': 500,\n    'semibold': 600,\n    'bold': 700\n  ),\n  'line-height': (\n    'tight': 1.25,\n    'snug': 1.375,\n    'normal': 1.5,\n    'relaxed': 1.625,\n    'loose': 2\n  )\n);\n\n// Breakpoint tokens\n$breakpoint-tokens: (\n  'xs': 0,\n  'sm': 576px,\n  'md': 768px,\n  'lg': 992px,\n  'xl': 1200px,\n  'xxl': 1400px\n);\n\n// Advanced Functions to Access Tokens\n@function token($category, $key, $subkey: null) {\n  @if map-has-key($category, $key) {\n    $value: map-get($category, $key);\n    \n    @if $subkey and type-of($value) == 'map' and map-has-key($value, $subkey) {\n      @return map-get($value, $subkey);\n    }\n    \n    @return $value;\n  }\n  \n  @error \"Token '#{$key}' not found in #{$category}\";\n}\n\n// Mixins for Token Usage\n@mixin color-token($property, $color-name, $tone: 'base') {\n  #{$property}: token($color-tokens, $color-name, $tone);\n}\n\n@mixin spacing-token($property, $spacing-name) {\n  #{$property}: token($spacing-tokens, $spacing-name);\n}\n\n@mixin typography-token($property, $typography-name) {\n  #{$property}: token($typography-tokens, $typography-name);\n}\n\n// Theme System Implementation\n// themes/_default.scss\n\n$theme-colors: (\n  'primary': token($color-tokens, 'primary'),\n  'secondary': token($color-tokens, 'secondary'),\n  'success': token($color-tokens, 'success'),\n  'warning': token($color-tokens, 'warning'),\n  'danger': token($color-tokens, 'danger')\n);\n\n// themes/_dark.scss\n\n$dark-theme-colors: (\n  'primary': (\n    'base': #3395ff,\n    'light': #66b0ff,\n    'dark': #0077e6,\n    'contrast': #000000\n  ),\n  'background': (\n    'base': #121212,\n    'surface': #1e1e1e,\n    'card': #252525\n  )\n);\n\n// Advanced Component with Token Usage\n// components/_buttons.scss\n\n.btn {\n  @include typography-token('font-family', 'font-family', 'base');\n  @include typography-token('font-weight', 'font-weight', 'medium');\n  @include spacing-token('padding', 'sm');\n  @include spacing-token('padding-left', 'lg');\n  @include spacing-token('padding-right', 'lg');\n  \n  border: none;\n  border-radius: token($spacing-tokens, 'xs');\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  \n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(token($color-tokens, 'primary', 'base'), 0.25);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n}\n\n.btn--primary {\n  @include color-token('background-color', 'primary', 'base');\n  @include color-token('color', 'primary', 'contrast');\n  \n  &:hover:not(:disabled) {\n    @include color-token('background-color', 'primary', 'dark');\n  }\n  \n  &:active:not(:disabled) {\n    transform: translateY(1px);\n  }\n}\n\n// Advanced Layout System\n// layout/_grid.scss\n\n// Responsive grid system using tokens\n.container {\n  width: 100%;\n  padding-right: token($spacing-tokens, 'md');\n  padding-left: token($spacing-tokens, 'md');\n  margin-right: auto;\n  margin-left: auto;\n  \n  @media (min-width: token($breakpoint-tokens, 'sm')) {\n    max-width: 540px;\n  }\n  \n  @media (min-width: token($breakpoint-tokens, 'md')) {\n    max-width: 720px;\n  }\n  \n  @media (min-width: token($breakpoint-tokens, 'lg')) {\n    max-width: 960px;\n  }\n  \n  @media (min-width: token($breakpoint-tokens, 'xl')) {\n    max-width: 1140px;\n  }\n  \n  @media (min-width: token($breakpoint-tokens, 'xxl')) {\n    max-width: 1320px;\n  }\n}\n\n// Advanced Mixin for Responsive Utilities\n@mixin respond-between($lower, $upper) {\n  @media (min-width: token($breakpoint-tokens, $lower)) and (max-width: (token($breakpoint-tokens, $upper) - 1)) {\n    @content;\n  }\n}\n\n// Usage example\n.hero-section {\n  @include respond-between('md', 'lg') {\n    padding: token($spacing-tokens, 'xl') token($spacing-tokens, 'xxl');\n  }\n}",
    "explanation": "This example demonstrates advanced architecture patterns including the 7-1 pattern implementation, design token systems with nested maps for colors, spacing, typography, and breakpoints, advanced functions for accessing tokens, mixins for consistent token usage, theme systems for light and dark modes, and responsive utilities using token-based breakpoints. These patterns enable scalable, maintainable Sass architectures with consistent design systems.",
    "language": "scss"
  },
  "pitfalls": [
    {
      "mistake": "Creating overly complex folder structures that are difficult to navigate",
      "solution": "Follow established patterns like 7-1 but adapt them to your project's specific needs, keeping the structure intuitive and well-documented",
      "severity": "medium"
    },
    {
      "mistake": "Not properly organizing design tokens leading to inconsistency",
      "solution": "Implement a comprehensive design token system with clear naming conventions and proper categorization of tokens by type and usage",
      "severity": "high"
    },
    {
      "mistake": "Mixing presentational and structural styles in components",
      "solution": "Separate presentational styles (colors, fonts) from structural styles (layout, positioning) using design tokens and clear architectural boundaries",
      "severity": "medium"
    }
  ],
  "exercises": [
    {
      "title": "Implement a Complete 7-1 Architecture with Design Token System",
      "description": "Create a full Sass architecture following the 7-1 pattern with comprehensive design tokens for colors, spacing, typography, and breakpoints, implement advanced functions for token access, create theme systems for light and dark modes, and build responsive utilities using token-based breakpoints",
      "checkpoints": [
        "Set up complete 7-1 folder structure with proper file organization",
        "Implement comprehensive design token system with nested maps",
        "Create advanced functions and mixins for token access and usage",
        "Build theme systems with light and dark mode support",
        "Develop responsive utilities using token-based breakpoints"
      ]
    }
  ],
  "next": [],
  "estimatedMinutes": 50,
  "difficulty": "Advanced",
  "tags": [
    "Architecture",
    "7-1 Pattern",
    "Design Tokens",
    "Theming",
    "Sass"
  ],
  "lastUpdated": "2025-10-03T00:00:00.000Z",
  "version": "1.0.0"
}